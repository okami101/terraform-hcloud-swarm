terraform {
  required_providers {
    hcloud = {
      source = "hetznercloud/hcloud"
    }
  }

  backend "kubernetes" {
    secret_suffix = "cloud"
  }
}

provider "hcloud" {
  # Here is the required hcloud API token with RW access in order to create all needed resources.
  token = "xxxxxx"
}

resource "hcloud_ssh_key" "default" {
  name       = "john"
  public_key = "ssh-ed25519 xxxxxx"
}

module "hcloud_swarm" {
  providers = {
    hcloud = hcloud
  }

  # Next all self-explanatory variables that you can customized. See https://registry.terraform.io/modules/okami101/swarm/hcloud/latest?tab=inputs for description.

  source = "okami101/swarm/hcloud"

  server_image    = "ubuntu-22.04"
  server_location = "nbg1"
  server_timezone = "Europe/Paris"
  server_locale   = "fr_FR.UTF-8"
  
  # Install nfs-common in order for any NFS server to attach to workers.
  server_packages = ["nfs-common"]

  # Use preferably something different than default 22.
  ssh_port = 2222

  # All hostname will use it as a prefix, aka <cluster_name>-worker-01, etc.
  cluster_name = "swarm"
  # The unix user for ssh login.
  cluster_user = "swarm"

  # The above hcloud ssh key names for adding them when creating nodes.
  my_ssh_key_names   = [hcloud_ssh_key.default.name]
  # Your required public ssh key for ssh access through all nodes.
  my_public_ssh_keys = [hcloud_ssh_key.default.public_key]
  # Put your fixed public ip here, heavily recommended for protecting ssh and kube server api port access on bastion server, default to any.
  my_ip_addresses = ["0.0.0.0/0", "::/0"]

  # Swarm managers configuration
  managers_server_type = "cx21"
  # Use an odd number
  managers_count       = 1

  # Swarm workers configuration
  workers_server_type = "cx21"
  workers_count       = 2

  # The type of load balancer.
  lb_type   = "lb11"
  # The node role to be load balanced. Can be manager or worker. These nodes should have a proper ingress controller installed, as traefik. If worker, traefik has to have access to docker API of managers in order to work. You can use a simple socket proxy solution as Socat.
  lb_target = "worker"
}

resource "hcloud_load_balancer_service" "http_service" {
  load_balancer_id = module.hcloud_swarm.lb_id
  protocol         = "tcp"
  listen_port      = 80
  destination_port = 80
}

resource "hcloud_load_balancer_service" "https_service" {
  load_balancer_id = module.hcloud_swarm.lb_id
  protocol         = "tcp"
  listen_port      = 443
  destination_port = 443
  proxyprotocol    = true
}

output "manager_ip" {
  value = module.hcloud_swarm.manager_ip
}

output "lb_ip" {
  value = module.hcloud_swarm.lb_ip
}

output "ssh_config" {
  value = module.hcloud_swarm.ssh_config
}
